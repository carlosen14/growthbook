import { getAgendaInstance } from "@back-end/src/services/queueing";
import { CRON_ENABLED } from "@back-end/src/util/secrets";
import addExperimentResultsJob from "@back-end/src/jobs/updateExperimentResults";
import refreshFactTableColumns from "@back-end/src/jobs/refreshFactTableColumns";
import updateScheduledFeatures from "@back-end/src/jobs/updateScheduledFeatures";
import addWebhooksJob from "@back-end/src/jobs/webhooks";
import addMetricUpdateJob from "@back-end/src/jobs/updateMetrics";
import addProxyUpdateJob from "@back-end/src/jobs/proxyUpdate";
import createInformationSchemaJob from "@back-end/src/jobs/createInformationSchema";
import updateInformationSchemaJob from "@back-end/src/jobs/updateInformationSchema";
import createAutoGeneratedMetrics from "@back-end/src/jobs/createAutoGeneratedMetrics";
import updateStaleInformationSchemaTable from "@back-end/src/jobs/updateStaleInformationSchemaTable";
import expireOldQueries from "@back-end/src/jobs/expireOldQueries";
import addSdkWebhooksJob from "@back-end/src/jobs/sdkWebhooks";

export async function queueInit() {
  if (!CRON_ENABLED) return;
  const agenda = getAgendaInstance();

  addExperimentResultsJob(agenda);
  updateScheduledFeatures(agenda);
  addMetricUpdateJob(agenda);
  addWebhooksJob(agenda);
  addProxyUpdateJob(agenda);
  createInformationSchemaJob(agenda);
  updateInformationSchemaJob(agenda);
  createAutoGeneratedMetrics(agenda);
  updateStaleInformationSchemaTable(agenda);
  expireOldQueries(agenda);
  refreshFactTableColumns(agenda);
  addSdkWebhooksJob(agenda);

  await agenda.start();
}
